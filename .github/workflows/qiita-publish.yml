name: Publish to Qiita

on:
  workflow_dispatch:
  push:
    paths: [ "articles/**" ]
    branches: [ main ]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 1) Secret が空でないかだけ確認
      - name: Check token presence
        shell: bash
        env:
          QIITA_TOKEN: ${{ secrets.QIITA_TOKEN }}
        run: |
          if [ -z "$QIITA_TOKEN" ]; then
            echo "ERROR: QIITA_TOKEN is empty"; exit 1; fi
          echo "QIITA_TOKEN is set."

      # 2) トークンをAPIで検証（コマンド置換を使わず安全に）
      - name: Verify token with Qiita API
        shell: bash
        env:
          QIITA_TOKEN: ${{ secrets.QIITA_TOKEN }}
        run: |
          set -euo pipefail
          curl -s -o /tmp/me.json \
            -H "Authorization: Bearer ${QIITA_TOKEN}" \
            https://qiita.com/api/v2/authenticated_user \
            -w "%{http_code}" > /tmp/status.txt
          code="$(cat /tmp/status.txt)"
          echo "HTTP ${code}"
          head -c 200 /tmp/me.json || true
          if [ "$code" != "200" ]; then
            echo "Token invalid or lacks scope (need read_qiita & write_qiita)."
            exit 1
          fi

      # 3) 存在確認（ファイル先頭も表示）
      - name: Debug files
        shell: bash
        run: |
          ls -la
          ls -la articles || true
          sed -n '1,25p' articles/firstStep-post.md || true

      # 4) 単一ファイルを明示的に投稿
      - name: Publish one file to Qiita
        env:
          QIITA_TOKEN: ${{ secrets.QIITA_TOKEN }}
        run: npx @qiita/qiita-cli@latest publish articles/firstStep-post.md
